<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ashen One</title>
  
  <subtitle>Days of our life</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-05T16:09:53.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Ashen One</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【LeetCode每日题解】20210605</title>
    <link href="http://example.com/posts/308c58f0/"/>
    <id>http://example.com/posts/308c58f0/</id>
    <published>2021-06-05T16:10:05.039Z</published>
    <updated>2021-06-05T16:09:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="leetcode每日题解20210605">【LeetCode每日题解】20210605</span></h1><h2><span id="每日一题">【每日一题】</span></h2><h3><span id="203-移除链表元素">203. 移除链表元素</span></h3><p><strong>链接</strong>：<a href="https://leetcode-cn.com/problems/remove-linked-list-elements/">https://leetcode-cn.com/problems/remove-linked-list-elements/</a></p><p><strong>题目</strong>：给你一个链表的头节点 <code>head</code> 和一个整数 <code>val</code> ，请你删除链表中所有满足 <code>Node.val == val</code> 的节点，并返回 <strong>新的头节点</strong> 。</p><p><strong>思路</strong>：移除链表中的节点可以通过递归和迭代的方式求解。利用<code>dummy</code>节点可以解决头节点被删除的情况。</p><p><strong>代码</strong>：</p><ul><li>迭代法实现</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeElements</span><span class="params">(ListNode head, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">        ListNode dummy = <span class="keyword">new</span> ListNode(-<span class="number">1</span>);</span><br><span class="line">        dummy.next = head;</span><br><span class="line">        ListNode currentNode = dummy;</span><br><span class="line">        <span class="keyword">while</span>(currentNode.next!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(currentNode.next.val == val)&#123;</span><br><span class="line">                currentNode.next = currentNode.next.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> currentNode = currentNode.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummy.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>时间复杂度：$O(N)$</li><li>空间复杂度：$O(1)$</li></ul><p><strong>总结：</strong>除了迭代法外，这题还可以通过递归的方式删除链表中的节点。</p><h2><span id="前缀和">【前缀和】</span></h2><h3><span id="1744-你能在你最喜欢的那天吃到你最喜欢的糖果吗">1744. 你能在你最喜欢的那天吃到你最喜欢的糖果吗？</span></h3><p><strong>链接</strong>：<a href="https://leetcode-cn.com/problems/can-you-eat-your-favorite-candy-on-your-favorite-day/">https://leetcode-cn.com/problems/can-you-eat-your-favorite-candy-on-your-favorite-day/</a></p><p><strong>题目</strong>：</p><p>给你一个下标从 <strong>0</strong> 开始的正整数数组 <code>candiesCount</code>，其中 <code>candiesCount[i]</code> 表示你拥有的第<code>i</code>类糖果的数目。同时给你一个二维数组 <code>queries</code> ，其中 <code>queries[i] = [favoriteTypei, favoriteDayi, dailyCapi]</code> 。</p><p>你按照如下规则进行一场游戏：</p><p>你从第 <strong>0</strong> 天开始吃糖果。<br>你在吃完 <strong>所有</strong> 第 <code>i - 1</code> 类糖果之前，<strong>不能</strong> 吃任何一颗第 <code>i</code> 类糖果。<br>在吃完所有糖果之前，你必须每天 <strong>至少</strong> 吃 <strong>一颗</strong> 糖果。<br>请你构建一个布尔型数组 <code>answer</code> ，满足 <code>answer.length == queries.length</code> 。<code>answer[i]</code> 为 <code>true</code>的条件是：在每天吃 <strong>不超过</strong> <code>dailyCapi</code> 颗糖果的前提下，你可以在第 <code>favoriteDayi</code> 天吃到第 <code>favoriteTypei</code> 类糖果；否则 <code>answer[i]</code> 为 <code>false</code> 。注意，只要满足上面 3 条规则中的第二条规则，你就可以在同一天吃不同类型的糖果。</p><p>请你返回得到的数组 <code>answer</code> 。</p><p><strong>思路</strong>：</p><p>要判断是否能在满足<strong>吃糖数量的限制条件</strong>的情况下在<strong>特定日期</strong>吃到<strong>特定种类的糖</strong>，需要利用<strong>吃糖数量的限制</strong>计算出吃到<strong>特定种类糖</strong>的<strong>最早/最晚时间</strong>，再判断特定日期是否在区间内即可。</p><p>首先，为了方便计算，需要预处理出<code>candiesCount</code>的前缀和数组<code>candieSumCount</code>用于表示第<code>i</code>类糖果前所有糖果的数量和。</p><p>其次，要注意题目是从第<strong>0</strong>天开始吃糖的，我们计算时都是从第一天开始计算的，所以需要将特定时间<strong>+1</strong>。</p><p>计算吃到第t类糖果的 [最早/最晚] 时间：</p><ul><li><p>最早时间（吃到第一颗<code>favoriteType</code>糖的最早时间）：以最大速率<code>dailyCap</code>吃糖，吃掉<code>favoriteType</code>类之前所有糖果的时间向下取整并加1：</p><script type="math/tex; mode=display">\lfloor \frac{candiesSumCount[favoriteType]}{dailyCap} \rfloor + 1</script></li><li><p>最晚时间：(吃完最后一颗<code>favoriteType</code>糖的最晚时间)：以最小速率<strong>1</strong>吃糖，吃掉所有 <code>favoriteType</code>类糖的时间:</p><script type="math/tex; mode=display">candiesSumCount[favoriteType+1]</script></li></ul><p><strong>代码</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span>[] canEat(<span class="keyword">int</span>[] candiesCount, <span class="keyword">int</span>[][] queries) &#123;</span><br><span class="line">        <span class="keyword">boolean</span>[] answer = <span class="keyword">new</span> <span class="keyword">boolean</span>[queries.length];</span><br><span class="line">        <span class="comment">//前缀和数组，使用long防止溢出</span></span><br><span class="line">        <span class="keyword">long</span>[] candiesSumCount = <span class="keyword">new</span> <span class="keyword">long</span>[candiesCount.length+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">//计算想要吃到指定类型的糖之前需要吃的糖的数量</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= candiesCount.length; i++) &#123;</span><br><span class="line">            candiesSumCount[i] = candiesSumCount[i-<span class="number">1</span>]+candiesCount[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; queries.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> favoriteType = queries[i][<span class="number">0</span>];</span><br><span class="line">            <span class="comment">//因为后续计算是从第1天开始的，所以将题目设定的时间加1</span></span><br><span class="line">            <span class="keyword">int</span> favoriteDay = queries[i][<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> dailyCap = queries[i][<span class="number">2</span>];</span><br><span class="line">            <span class="comment">//计算能吃到糖的最早时间=以最大速率吃完前面的糖的时间（向下取整）+1</span></span><br><span class="line">            <span class="keyword">long</span> min = candiesSumCount[favoriteType] / dailyCap + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//能吃到糖的最晚时间=吃光喜欢的糖需要的时间</span></span><br><span class="line">            <span class="keyword">long</span> max = candiesSumCount[favoriteType+<span class="number">1</span>];</span><br><span class="line">            answer[i] = favoriteDay&gt;=min &amp;&amp; favoriteDay&lt;=max;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> answer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>时间复杂度：$O(n+m)$，<code>candiesSum</code>的数组长度为<code>n</code>, <code>queries</code>的数组长度为<code>m</code></li><li>空间复杂度：$O(n)$</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;leetcode每日题解20210605&quot;&gt;【LeetCode每日题解】20210605&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span id=&quot;每日一题&quot;&gt;【每日一题】&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span id=&quot;203-移除链表元素&quot;&gt;203. 移</summary>
      
    
    
    
    <category term="LeetCode每日题解" scheme="http://example.com/categories/LeetCode%E6%AF%8F%E6%97%A5%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="LeetCode每日题解" scheme="http://example.com/tags/LeetCode%E6%AF%8F%E6%97%A5%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/posts/4a17b156/"/>
    <id>http://example.com/posts/4a17b156/</id>
    <published>2021-06-05T13:13:45.237Z</published>
    <updated>2021-06-05T13:13:45.237Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2><span id="quick-start">Quick Start</span></h2><h3><span id="create-a-new-post">Create a new post</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3><span id="run-server">Run server</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3><span id="generate-static-files">Generate static files</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3><span id="deploy-to-remote-sites">Deploy to remote sites</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
